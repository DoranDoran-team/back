spring.application.name=dorandoran

# 서버 포트 지정
server.port=4000

# MySQL 데이터베이스 연결
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/dorandoran?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=dorandoran
spring.datasource.password=gloria010425?
# 각자 위의 username, password 작성하셔야 돼요!!

# JWT 비밀키
jwt.secret=112314325345346345alsfjasnlsmklsdnfsd49239494skflksmdf242425480528ksfsks


# Request 사이즈 제한 조정 (이미지 에러날까봐 미리 적었습니다)
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=150MB

# file 작업 경로 (본인 경로로 수정하시면 됩니다!)
file.path=D:/upload/
file.url=http://localhost:4000/file/

# COOL SMS API KEY, SECRET KEY
cool-sms.api-key=NCSHPK2KXDBXNJWX
cool-sms.secret-key=ZCIJTZ4KJ12ABFDW3DKIVTCXZ8R3H7CP
cool-sms.domain=https://api.coolsms.co.kr
cool-sms.from=01051214517

# Kakao OAuth 클라이언트 설정
spring.security.oauth2.client.registration.kakao.client-id=e5e212e0b46f7204f646110e48618869
spring.security.oauth2.client.registration.kakao.client-secret=hIJwTcCE6LUNuTxqwdVU3v8i5Q1DDds2
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname

# Kakao OAuth2 제공자 설정
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Naver OAuth 클라이언트 설정
spring.security.oauth2.client.registration.naver.client-id=jtTlTTIvwydV75kkFskZ
spring.security.oauth2.client.registration.naver.client-secret=Rs8kZpOOUa
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=email

# Naver OAuth2 제공자 설정
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Google OAuth 설정
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email

# Google OAuth2 프로바이더 설정
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
